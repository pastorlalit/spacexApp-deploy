{"version":3,"sources":["layout/Header.js","layout/Footer.js","components/LaunchItem.js","components/Launches.js","components/Launch.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","alt","src","Component","Footer","LaunchItem","_ref","_ref$launch","launch","flight_number","mission_name","launch_date_local","launch_success","classNames","text-success","text-danger","dist_default","format","react_router_dom","to","concat","btn btn-success","btn btn-danger","LAUNCHES_QUERY","gql","_templateObject","Launches","style","color","react_apollo_esm","query","loading","error","data","role","console","log","launches","map","key","LAUNCH_QUERY","Launch_templateObject","Launch","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","props","match","params","parseInt","variables","class","_data$launch","launch_year","_data$launch$rocket","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","App","layout_Header","type","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c0598ae.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"headWrap\">\r\n                    <div className=\"container\">\r\n\r\n                        <div className=\"col-md-3\">\r\n                            <img alt =\"logo\" className=\"logo\" src=\"https://www.spacex.com/sites/spacex/files/spacex_logo_white.png\" />\r\n                        </div>\r\n                        <div className=\"col-md-8\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div className=\"footerWrap\">\r\n      <div className=\"container\">\r\n        <div className=\"col-md-3\">\r\n          <p className=\"footerContent\">Developed by Lalit Pastor</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport Moment from \"react-moment\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function LaunchItem({\r\n\tlaunch: { flight_number, mission_name, launch_date_local, launch_success }\r\n}) {\r\n\treturn (\r\n\t\t<div className=\"card card-body mb-3\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-9\">\r\n\t\t\t\t\t<h4>\r\n\t\t\t\t\t\tMission:{\" \"}\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclassName={classNames({\r\n\t\t\t\t\t\t\t\t\"text-success\": launch_success,\r\n\t\t\t\t\t\t\t\t\"text-danger\": !launch_success\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{mission_name}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</h4>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tDate: <Moment format=\"DD-MM-YYYY HH:mm\">{launch_date_local}</Moment>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tto={`/launch/${flight_number}`}\r\n\t\t\t\t\t\tclassName={classNames({\r\n\t\t\t\t\t\t\t\"btn btn-success\": launch_success,\r\n\t\t\t\t\t\t\t\"btn btn-danger\": !launch_success\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tLaunch Details\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\nimport LaunchItem from \"./LaunchItem\";\r\n\r\nconst LAUNCHES_QUERY = gql`\r\n\tquery LaunchesQuery {\r\n\t\tlaunches {\r\n\t\t\tflight_number\r\n\t\t\tmission_name\r\n\t\t\tlaunch_date_local\r\n\t\t\tlaunch_success\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nclass Launches extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"launchContent\">\r\n\t\t\t\t<h2 style={{ color: \"#FF9703\" }}>Launches</h2>\r\n\t\t\t\t<Query query={LAUNCHES_QUERY}>\r\n\t\t\t\t\t{({ loading, error, data }) => {\r\n\t\t\t\t\t\tif (loading)\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\tLoading...\r\n\t\t\t\t\t\t\t\t\t<div className=\"spinner-border text-success\" role=\"status\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"sr-only\">Loading...</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tif (error) console.log(error);\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{data.launches.map(launch => (\r\n\t\t\t\t\t\t\t\t\t<LaunchItem key={launch.flight_number} launch={launch} />\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}}\r\n\t\t\t\t</Query>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Launches;\r\n","import React, { Component, Fragment } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n\r\nconst LAUNCH_QUERY = gql`\r\n  query LaunchQuery($flight_number: Int!) {\r\n    launch(flight_number: $flight_number) {\r\n      flight_number\r\n      mission_name\r\n      launch_year\r\n      launch_success\r\n      launch_date_local\r\n      rocket {\r\n        rocket_id\r\n        rocket_name\r\n        rocket_type\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport class Launch extends Component {\r\n  render() {\r\n    let { flight_number } = this.props.match.params;\r\n    flight_number = parseInt(flight_number);\r\n    return (\r\n      <div className=\"launchDetail\">\r\n        <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\r\n          {({ loading, error, data }) => {\r\n            if (loading) return (\r\n                <h4>Loading...\r\n                  <div class=\"spinner-border text-success\" role=\"status\">\r\n                  <span class=\"sr-only\">Loading...</span>\r\n                </div>\r\n                </h4>\r\n                \r\n              )\r\n            if (error) console.log(error);\r\n\r\n            const {\r\n              mission_name,\r\n              flight_number,\r\n              launch_year,\r\n              launch_success,\r\n              rocket: { rocket_id, rocket_name, rocket_type }\r\n            } = data.launch;\r\n\r\n            return (\r\n              <div>\r\n                <h1 className=\"display-4 my-3\">\r\n                  <span className=\"text-warning\">Mission:</span> {mission_name}\r\n                </h1>\r\n                <h4 className=\"mb-3\">Launch Details</h4>\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">\r\n                    Flight Number: {flight_number}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    Launch Year: {launch_year}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    Launch Successful:{' '}\r\n                    <span\r\n                      className={classNames({\r\n                        'text-success': launch_success,\r\n                        'text-danger': !launch_success\r\n                      })}\r\n                    >\r\n                      {launch_success ? 'Yes' : 'No'}\r\n                    </span>\r\n                  </li>\r\n                </ul>\r\n\r\n                <h4 className=\"my-3\">Rocket Details</h4>\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\r\n                  <li className=\"list-group-item\">\r\n                    Rocket Name: {rocket_name}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    Rocket Type: {rocket_type}\r\n                  </li>\r\n                </ul>\r\n                <hr />\r\n                <Link to=\"/\" className=\"btn btn-secondary\">\r\n                  Back\r\n                </Link>\r\n              </div>\r\n            );\r\n          }}\r\n        </Query>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Launch;","import React, { Component } from \"react\";\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport \"./App.css\";\nimport Header from \"./layout/Header\";\nimport Footer from \"./layout/Footer\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Launches from \"./components/Launches\";\nimport Launch from \"./components/Launch\";\n\nconst client = new ApolloClient({\n\turi: \"/graphql\"\n});\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<ApolloProvider client={client}>\n\t\t\t\t<Router>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Header></Header>\n\t\t\t\t\t\t<div className=\"container page-content\">\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t{/* <button type=\"button\" className=\"btn btn-outline-info\">Info</button> */}\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-outline-success\">\n\t\t\t\t\t\t\t\t\tSuccess\n\t\t\t\t\t\t\t\t</button>{\" \"}\n\t\t\t\t\t\t\t\t{/* <button type=\"button\" className=\"btn btn-outline-warning\">Warning</button> */}\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-outline-danger\">\n\t\t\t\t\t\t\t\t\tFailed\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={Launches} />\n\t\t\t\t\t\t\t<Route exact path=\"/launch/:flight_number\" component={Launch} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Footer></Footer>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</ApolloProvider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/bootstrap.css';\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}